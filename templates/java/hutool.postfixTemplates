## hutool ##
## https://raw.githubusercontent.com/zengyufei/HutoolPostfixTemplates/master/templates/java/hutool.postfixTemplates ##
## %USERPROFILE%/.IntelliJIdea2018.2\config\plugins\custom-postfix-templates_templates\templates\java ##

## Convert ##
.str : hutool convert to str
    java.lang.String [cn.hutool.core.convert.Convert]  →  Convert.toStr($expr$)
    java.lang.Object [cn.hutool.core.convert.Convert]  →  Convert.toStr($expr$)

.int : hutool convert to int
    java.lang.String [cn.hutool.core.convert.Convert]  →  Convert.toInt($expr$, 0)
    java.lang.Object [cn.hutool.core.convert.Convert]  →  Convert.toInt($expr$, 0)

.long : hutool convert to int
    java.lang.String [cn.hutool.core.convert.Convert]  →  Convert.toLong($expr$, 0L)
    java.lang.Object [cn.hutool.core.convert.Convert]  →  Convert.toLong($expr$, 0L)
    
.bool : hutool convert to bool
    java.lang.String [cn.hutool.core.convert.Convert]  →  Convert.toBool($expr$, false)
    java.lang.Object [cn.hutool.core.convert.Convert]  →  Convert.toBool($expr$, false)

## String ##

.bl : hutool is blank
    java.lang.String [cn.hutool.core.util.StrUtil]  →  StrUtil.isBlank($expr$)
    java.lang.Object [cn.hutool.core.util.StrUtil]  →  StrUtil.isBlank((String) $expr$)

.blif : hutool is if blank
    java.lang.String [cn.hutool.core.util.StrUtil]  →   if (StrUtil.isBlank($expr$)) {\
                                                                                    $END$\
                                                                                }

    java.lang.Object [cn.hutool.core.util.StrUtil]  →   if (StrUtil.isBlank((String) $expr$)) {\
                                                                                    $END$\
                                                                                }

.ifbl : hutool is if blank
    java.lang.String [cn.hutool.core.util.StrUtil]  →   if (StrUtil.isBlank($expr$)) {\
                                                                                    $END$\
                                                                                }
    java.lang.Object [cn.hutool.core.util.StrUtil]  →   if (StrUtil.isBlank((String) $expr$)) {\
                                                                                    $END$\
                                                                                }

.nn : hutool is not blank
    java.lang.String [cn.hutool.core.util.StrUtil]  →  StrUtil.isNotBlank($expr$)
    java.lang.Object [cn.hutool.core.util.StrUtil]  →  StrUtil.isNotBlank((String) $expr$)

.nbl : hutool is not blank
    java.lang.String [cn.hutool.core.util.StrUtil]  →  StrUtil.isNotBlank($expr$)
    java.lang.Object [cn.hutool.core.util.StrUtil]  →  StrUtil.isNotBlank((String) $expr$)

.nblif : hutool is if not blank
    java.lang.String [cn.hutool.core.util.StrUtil]  →   if (StrUtil.isNotBlank($expr$)) {\
                                                                                    $END$\
                                                                                }
    java.lang.Object [cn.hutool.core.util.StrUtil]  →   if (StrUtil.isNotBlank((String) $expr$)) {\
                                                                                    $END$\
                                                                                }
.nnif : hutool is if not blank
    java.lang.String [cn.hutool.core.util.StrUtil]  →   if (StrUtil.isNotBlank($expr$)) {\
                                                                                    $END$\
                                                                                }
    java.lang.Object [cn.hutool.core.util.StrUtil]  →   if (StrUtil.isNotBlank((String) $expr$)) {\
                                                                                    $END$\
                                                                                }

.bln : hutool is not blank
    java.lang.String [cn.hutool.core.util.StrUtil]  →  StrUtil.isNotBlank($expr$)
    java.lang.Object [cn.hutool.core.util.StrUtil]  →  StrUtil.isNotBlank((String) $expr$)

.blnif : hutool is if not blank
    java.lang.String [cn.hutool.core.util.StrUtil]  →   if (StrUtil.isNotBlank($expr$)) {\
                                                                                    $END$\
                                                                                }
    java.lang.Object [cn.hutool.core.util.StrUtil]  →   if (StrUtil.isNotBlank((String) $expr$)) {\
                                                                                    $END$\
                                                                                }

.ifnbl : hutool is if not blank
    java.lang.String [cn.hutool.core.util.StrUtil]  →   if (StrUtil.isNotBlank($expr$)) {\
                                                                                    $END$\
                                                                                }
    java.lang.Object [cn.hutool.core.util.StrUtil]  →   if (StrUtil.isNotBlank((String) $expr$)) {\
                                                                                    $END$\
                                                                                }

.ifnn : hutool is if not blank
    java.lang.String [cn.hutool.core.util.StrUtil]  →   if (StrUtil.isNotBlank($expr$)) {\
                                                                                    $END$\
                                                                                }
    java.lang.Object [cn.hutool.core.util.StrUtil]  →   if (StrUtil.isNotBlank((String) $expr$)) {\
                                                                                    $END$\
                                                                                }

.fm : hutool is format
    java.lang.String [cn.hutool.core.util.StrUtil]  →  StrUtil.format($expr$, $END$)
    java.lang.Object [cn.hutool.core.util.StrUtil]  →  StrUtil.format((String) $expr$, $END$)
    
.fm : hutool is format
    ANY [cn.hutool.core.util.StrUtil]  →  StrUtil.format($expr$, $END$)

.eq : hutool is equals
    java.lang.String [cn.hutool.core.util.StrUtil]  →  StrUtil.equals($expr$, "$END$")
    java.lang.Object [cn.hutool.core.util.StrUtil]  →  StrUtil.equals((String) $expr$, "$END$")

.eqi : hutool is equalsIgnoreCase
    java.lang.String [cn.hutool.core.util.StrUtil]  →  StrUtil.equalsIgnoreCase($expr$, "$END$")
    java.lang.Object [cn.hutool.core.util.StrUtil]  →  StrUtil.equalsIgnoreCase((String) $expr$, "$END$")
    
.bd : hutool is blankToDefault
    java.lang.String [cn.hutool.core.util.StrUtil]  →  $expr$ = StrUtil.blankToDefault($expr$, "$END$");
    java.lang.Object [cn.hutool.core.util.StrUtil]  →  $expr$ = StrUtil.blankToDefault((String) $expr$, "$END$");

.ne : hutool is nullToEmpty
    java.lang.String [cn.hutool.core.util.StrUtil]  →  $expr$ = StrUtil.nullToEmpty($expr$);
    java.lang.Object [cn.hutool.core.util.StrUtil]  →  $expr$ = StrUtil.nullToEmpty((String) $expr$);

.sp : hutool is nullToEmpty
    java.lang.String [cn.hutool.core.util.StrUtil]  →  String[] $expr$s = StrUtil.split($expr$, "$END$");
    java.lang.Object [cn.hutool.core.util.StrUtil]  →  String[] $expr$s = StrUtil.split((String) $expr$, "$END$");
    
## Collection ##

.em : hutool is empty
    java.util.Map [cn.hutool.core.map.MapUtil]  →  MapUtil.isEmpty($expr$)
    ARRAY [cn.hutool.core.util.ArrayUtil]  →  ArrayUtil.isEmpty($expr$)
    java.util.Collection [cn.hutool.core.collection.CollUtil]  →  CollUtil.isEmpty($expr$)
    java.lang.Iterable [cn.hutool.core.collection.CollUtil]  →  CollUtil.isEmpty($expr$)


.ifem : hutool is if empty
    java.util.Map [cn.hutool.core.map.MapUtil]  →   if (MapUtil.isEmpty($expr$)) {\
                                                                                    $END$\
                                                                                }
    ARRAY [cn.hutool.core.util.ArrayUtil]  →   if (ArrayUtil.isEmpty($expr$)) {\
                                                                                    $END$\
                                                                                }
    java.util.Collection [cn.hutool.core.collection.CollUtil]  →   if (CollUtil.isEmpty($expr$)) {\
                                                                                    $END$\
                                                                                }
    java.lang.Iterable [cn.hutool.core.collection.CollUtil]  →   if (CollUtil.isEmpty($expr$)) {\
                                                                                    $END$\
                                                                                }

.emif : hutool is if empty
    java.util.Map [cn.hutool.core.map.MapUtil]  →   if (MapUtil.isEmpty($expr$)) {\
                                                                                    $END$\
                                                                                }
    ARRAY [cn.hutool.core.util.ArrayUtil]  →   if (ArrayUtil.isEmpty($expr$)) {\
                                                                                    $END$\
                                                                                }
    java.util.Collection [cn.hutool.core.collection.CollUtil]  →   if (CollUtil.isEmpty($expr$)) {\
                                                                                    $END$\
                                                                                }
    java.lang.Iterable [cn.hutool.core.collection.CollUtil]  →   if (CollUtil.isEmpty($expr$)) {\
                                                                                    $END$\
                                                                                }

.nn : hutool is not empty
    java.util.Map [cn.hutool.core.map.MapUtil]  →  MapUtil.isNotEmpty($expr$)
    ARRAY [cn.hutool.core.util.ArrayUtil]  →  ArrayUtil.isNotEmpty($expr$)
    java.util.Collection [cn.hutool.core.collection.CollUtil]  →  CollUtil.isNotEmpty($expr$)
    java.lang.Iterable [cn.hutool.core.collection.CollUtil]  →  CollUtil.isNotEmpty($expr$)
    

.nem : hutool is not empty
    java.util.Map [cn.hutool.core.map.MapUtil]  →  MapUtil.isNotEmpty($expr$)
    ARRAY [cn.hutool.core.util.ArrayUtil]  →  ArrayUtil.isNotEmpty($expr$)
    java.util.Collection [cn.hutool.core.collection.CollUtil]  →  CollUtil.isNotEmpty($expr$)
    java.lang.Iterable [cn.hutool.core.collection.CollUtil]  →  CollUtil.isNotEmpty($expr$)
    
.emn : hutool is not empty
    java.util.Map [cn.hutool.core.map.MapUtil]  →  MapUtil.isNotEmpty($expr$)
    ARRAY [cn.hutool.core.util.ArrayUtil]  →  ArrayUtil.isNotEmpty($expr$)
    java.util.Collection [cn.hutool.core.collection.CollUtil]  →  CollUtil.isNotEmpty($expr$)
    java.lang.Iterable [cn.hutool.core.collection.CollUtil]  →  CollUtil.isNotEmpty($expr$)

.emnif : hutool is if not empty
    java.util.Map [cn.hutool.core.map.MapUtil]  →   if (MapUtil.isNotEmpty($expr$)) {\
                                                                                    $END$\
                                                                                }
    ARRAY [cn.hutool.core.util.ArrayUtil]  →   if (ArrayUtil.isNotEmpty($expr$)) {\
                                                                                    $END$\
                                                                                }
    java.util.Collection [cn.hutool.core.collection.CollUtil]  →   if (CollUtil.isNotEmpty($expr$)) {\
                                                                                    $END$\
                                                                                }
    java.lang.Iterable [cn.hutool.core.collection.CollUtil]  →   if (CollUtil.isNotEmpty($expr$)) {\
                                                                                    $END$\
                                                                                }
.nnif : hutool is if not empty
    java.util.Map [cn.hutool.core.map.MapUtil]  →   if (MapUtil.isNotEmpty($expr$)) {\
                                                                                    $END$\
                                                                                }
    ARRAY [cn.hutool.core.util.ArrayUtil]  →   if (ArrayUtil.isNotEmpty($expr$)) {\
                                                                                    $END$\
                                                                                }
    java.util.Collection [cn.hutool.core.collection.CollUtil]  →   if (CollUtil.isNotEmpty($expr$)) {\
                                                                                    $END$\
                                                                                }
    java.lang.Iterable [cn.hutool.core.collection.CollUtil]  →   if (CollUtil.isNotEmpty($expr$)) {\
                                                                                    $END$\
                                                                                }

.ifnem : hutool is if not empty
    java.util.Map [cn.hutool.core.map.MapUtil]  →   if (MapUtil.isNotEmpty($expr$)) {\
                                                                                    $END$\
                                                                                }
    ARRAY [cn.hutool.core.util.ArrayUtil]  →   if (ArrayUtil.isNotEmpty($expr$)) {\
                                                                                    $END$\
                                                                                }
    java.util.Collection [cn.hutool.core.collection.CollUtil]  →   if (CollUtil.isNotEmpty($expr$)) {\
                                                                                    $END$\
                                                                                }
    java.lang.Iterable [cn.hutool.core.collection.CollUtil]  →   if (CollUtil.isNotEmpty($expr$)) {\
                                                                                    $END$\
                                                                                }

.ifnn : hutool is if not empty
    java.util.Map [cn.hutool.core.map.MapUtil]  →   if (MapUtil.isNotEmpty($expr$)) {\
                                                                                    $END$\
                                                                                }
    ARRAY [cn.hutool.core.util.ArrayUtil]  →   if (ArrayUtil.isNotEmpty($expr$)) {\
                                                                                    $END$\
                                                                                }
    java.util.Collection [cn.hutool.core.collection.CollUtil]  →   if (CollUtil.isNotEmpty($expr$)) {\
                                                                                    $END$\
                                                                                }
    java.lang.Iterable [cn.hutool.core.collection.CollUtil]  →   if (CollUtil.isNotEmpty($expr$)) {\
                                                                                    $END$\
                                                                                }

.first : hutool is getFirst
    java.util.Collection [cn.hutool.core.collection.CollUtil]  →  CollUtil.isEmpty($expr$)
    java.lang.Iterable [cn.hutool.core.collection.CollUtil]  →  CollUtil.isEmpty($expr$)

.file : new File
    java.lang.String [java.io.File]  →  File $END$ = new File($expr$)

## log ##
## Templates for Apache commons-logging ##

.logDebug : log debug message
    java.lang.String [org.apache.commons.logging.Log]  →   if (log.isDebugEnabled()) {\
                                                                                    $log*:variableOfType("org.apache.commons.logging.Log"):"log"$.debug($expr$, $exception:variableOfType("java.lang.Throwable")$);\
                                                                                }
    java.lang.Throwable [org.apache.commons.logging.Log]  →   if (log.isDebugEnabled()) {\
                                                                                    $log*:variableOfType("org.apache.commons.logging.Log"):"log"$.debug("$message$", $expr$);\
                                                                                }

.logError : log error message
    java.lang.String [org.apache.commons.logging.Log]  →   $log*:variableOfType("org.apache.commons.logging.Log"):"log"$.error($expr$, $exception:variableOfType("java.lang.Throwable")$);
    java.lang.Throwable [org.apache.commons.logging.Log]  →   $log*:variableOfType("org.apache.commons.logging.Log"):"log"$.error("$message$", $expr$);

.logWarn : log warn message
    java.lang.String    [org.apache.commons.logging.Log]  →  $log*:variableOfType("org.apache.commons.logging.Log"):"log"$.warn($expr$, $exception:variableOfType("java.lang.Throwable")$);
    java.lang.Throwable [org.apache.commons.logging.Log]  →  $log*:variableOfType("org.apache.commons.logging.Log"):"log"$.warn("$message$", $expr$);
    
.logInfo : log info message
    java.lang.String    [org.apache.commons.logging.Log]  →  $log*:variableOfType("org.apache.commons.logging.Log"):"log"$.info($expr$, $exception:variableOfType("java.lang.Throwable")$);
    java.lang.Throwable [org.apache.commons.logging.Log]  →  $log*:variableOfType("org.apache.commons.logging.Log"):"log"$.info("$message$", $expr$);



## Console.log ##
.cl : Console out
    ANY [cn.hutool.core.lang.Console]  →  Console.log("$expr$: {}", $expr$);
.out : Console out
    ANY [cn.hutool.core.lang.Console]  →  Console.log("$expr$: {}", $expr$);
.con : Console out
    ANY [cn.hutool.core.lang.Console]  →  Console.log("$expr$: {}", $expr$);

    
